<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.q_slot = ds_stack_pop(global.deck);
global.w_slot = ds_stack_pop(global.deck);
global.e_slot = ds_stack_pop(global.deck);
global.r_slot = ds_stack_pop(global.deck);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///discard current R card
ds_queue_enqueue(global.resolve, global.r_slot);
ds_stack_push(global.discard,global.r_slot);
global.r_slot = noone;

///reset deck if empty
if ds_stack_empty(global.deck) {
    ds_stack_copy(global.deck, global.discard);
    ds_stack_clear(global.discard);
    with obj_deck {
        event_perform(ev_other, ev_user0);
    }
}

//draw top card of deck to R slot
global.r_slot = ds_stack_pop(global.deck);

alarm[3] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///discard current E card
ds_queue_enqueue(global.resolve, global.e_slot);
ds_stack_push(global.discard,global.e_slot);
global.e_slot = noone;

///reset deck if empty
if ds_stack_empty(global.deck) {
    ds_stack_copy(global.deck, global.discard);
    ds_stack_clear(global.discard);
    with obj_deck {
        event_perform(ev_other, ev_user0);
    }
}

//draw top card of deck to E slot
global.e_slot = ds_stack_pop(global.deck);

alarm[2] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///discard current W card
ds_queue_enqueue(global.resolve, global.w_slot);
ds_stack_push(global.discard,global.w_slot);
global.w_slot = noone;

///reset deck if empty
if ds_stack_empty(global.deck) {
    ds_stack_copy(global.deck, global.discard);
    ds_stack_clear(global.discard);
    with obj_deck {
        event_perform(ev_other, ev_user0);
    }
}

//draw top card of deck to W slot
global.w_slot = ds_stack_pop(global.deck);

alarm[1] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///discard current Q card
ds_queue_enqueue(global.resolve, global.q_slot);
ds_stack_push(global.discard,global.q_slot);
global.q_slot = noone;

///reset deck if empty
if ds_stack_empty(global.deck) {
    ds_stack_copy(global.deck, global.discard);
    ds_stack_clear(global.discard);
    with obj_deck {
        event_perform(ev_other, ev_user0);
    }
}

//draw top card of deck to Q slot
global.q_slot = ds_stack_pop(global.deck);

alarm[0] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alarm[0] &lt; 1 {
    draw_sprite(global.q_slot, -1, 245, 272);
} else {
    draw_sprite_ext(global.q_slot, 0, 245, 272, 1, 1, 0, c_yellow, 0.5);
}

if alarm[1] &lt; 1 {
    draw_sprite(global.w_slot, -1, 303, 272);
} else {
    draw_sprite_ext(global.w_slot, -1, 303, 272, 1, 1, 0, c_yellow, 0.5);
}

if alarm[2] &lt; 1 {
    draw_sprite(global.e_slot, -1, 361, 272);
} else {
    draw_sprite_ext(global.e_slot, -1, 361, 272, 1, 1, 0, c_yellow, 0.5);
}

if alarm[3] &lt; 1 {
    draw_sprite(global.r_slot, -1, 419, 272);
} else {
    draw_sprite_ext(global.r_slot, -1, 419, 272, 1, 1, 0, c_yellow, 0.5);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alarm[1] = -1 {
    alarm[1] = DEFAULT_COOLDOWN;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alarm[3] = -1 {
    alarm[3] = DEFAULT_COOLDOWN;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alarm[0] = -1 {
    alarm[0] = DEFAULT_COOLDOWN;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alarm[2] = -1 {
    alarm[2] = DEFAULT_COOLDOWN;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
